<?xml version="1.0"?>
<doc>
<assembly>
<name>
CHCCommonLibrary
</name>
</assembly>
<members>
<member name="T:CHCCommonLibrary.My.Resources.Resources">
<summary>
  Classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
</summary>
</member>
<member name="P:CHCCommonLibrary.My.Resources.Resources.ResourceManager">
<summary>
  Restituisce l'istanza di ResourceManager nella cache utilizzata da questa classe.
</summary>
</member>
<member name="P:CHCCommonLibrary.My.Resources.Resources.Culture">
<summary>
  Esegue l'override della proprietà CurrentUICulture del thread corrente per tutte le
  ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
</summary>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Communication.ProxyWS`1.getData">
 <summary>
 This method provides to get a remote data
 </summary>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Communication.ProxyWS`1.standardize">
 <summary>
 This method provide to standardize a data to prepare to communicate
 </summary>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Communication.ProxyWS`1.sendData(System.String)">
 <summary>
 This method provides to send a remote data
 </summary>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Communication.ProxySimplyWS`1.getData">
 <summary>
 This method's provides to get a remote data
 </summary>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Communication.ProxySimplyWS`1.sendData(System.String)">
 <summary>
 This method's provides to send a remote data
 </summary>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Encryption.AES.encrypt(System.String,System.String)">
 <summary>
 This method provide to encrypt a string with a simmetric encryption (AES)
 </summary>
 <param name="content"></param>
 <param name="key"></param>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Encryption.AES.decrypt(System.String,System.String)">
 <summary>
 This method provide to crypt a string with a simmetric crypt (AES)
 </summary>
 <param name="content"></param>
 <param name="key"></param>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Miscellaneous.CommandLineParameters.addNewToken(System.String,System.String)">
 <summary>
 This method provides to add a new token into list
 </summary>
 <param name="CommandToken"></param>
 <param name="CommandValue"></param>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Miscellaneous.CommandLineParameters.exist(System.String)">
 <summary>
 This method provides to check if exist an token into command line
 </summary>
 <param name="CommandToken"></param>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Miscellaneous.CommandLineParameters.GetValue(System.String)">
 <summary>
 This method provides to return a value relative a CommandToken
 </summary>
 <param name="CommandToken"></param>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Miscellaneous.CommandLineParameters.decode(System.String[])">
 <summary>
 This method provides to decode a command line
 </summary>
 <param name="CommandLine"></param>
</member>
<member name="M:CHCCommonLibrary.AreaEngine.Miscellaneous.CommandLineParameters.composeCommand(System.String,System.String)">
 <summary>
 This method provides to build an a command line
 </summary>
 <param name="command"></param>
 <param name="description"></param>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.Support.LogEngine.writeConsoleGUI(System.String)">
 <summary>
 This method provide to write into a console GUI
 </summary>
 <param name="rowTmp"></param>
</member>
<member name="M:CHCCommonLibrary.Support.LogEngine.flushCache">
 <summary>
 This method provide to flush a cache
 </summary>
</member>
<member name="M:CHCCommonLibrary.Support.LogEngine.init(System.String,System.String,CHCCommonLibrary.Support.RegistryEngine)">
 <summary>
 This method provide to initialize the log component
 </summary>
 <param name="basePath"></param>
 <param name="fileName"></param>
 <param name="registryPointer"></param>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.Support.LogEngine.track(System.String,System.String,System.String,System.Boolean)">
 <summary>
 This method to provide to track a specific message
 </summary>
 <param name="position"></param>
 <param name="content"></param>
 <param name="messageType"></param>
</member>
<member name="M:CHCCommonLibrary.Support.LogEngine.trackIntoConsole(System.String)">
 <summary>
 This method provide to track into console
 </summary>
 <param name="message"></param>
</member>
<member name="M:CHCCommonLibrary.Support.LogEngine.getLastTrack">
 <summary>
 This method provide to return a Last Track of log
 </summary>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.Support.LogEngine.createAccess">
 <summary>
 This method provide to create an access Log
 </summary>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.Support.RegistryEngine.init(System.String)">
 <summary>
 This method provide to create path into base directory
 and set file name
 </summary>
 <param name="path"></param>
 <returns></returns>
</member>
<member name="M:CHCCommonLibrary.Support.CounterEngine.rebuildIndex(CHCCommonLibrary.Support.LogEngine)">
 <summary>
 This method provide to rebuild a complete list
 </summary>
 <returns></returns>
</member>
</members>
</doc>
